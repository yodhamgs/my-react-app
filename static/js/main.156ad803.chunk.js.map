{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","type","role","charAt","toUpperCase","slice","msg","data-bs-dismiss","aria-label","About","myStyle","setMyStyle","useState","color","backgroundColor","btnText","setBtnText","style","fontWeight","id","borderRadius","marginBottom","boxShadow","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","data-bs-parent","onClick","toggleStyle","border","Navbar","mode","Link","to","title","aria-current","aboutText","toggleMode","htmlFor","TextForm","text","setText","wordCount","trim","split","filter","element","length","Fragment","heading","value","onChange","event","target","rows","placeholder","handleUpClick","newText","showAlert","disabled","handleLowClick","toLowerCase","handleClearClick","handleCopy","navigator","clipboard","writeText","handleExtraSpaces","join","handleReverseText","reverse","handleCapitalizeWords","map","word","App","setMode","setAlert","message","setTimeout","Router","document","body","Routes","Route","exact","path","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.156ad803.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && (\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type.charAt(0).toUpperCase() + props.alert.type.slice(1)}</strong>: {props.alert.msg}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function About() {\r\n  const [myStyle, setMyStyle] = useState({\r\n    color: 'black',\r\n    backgroundColor: 'white',\r\n  });\r\n\r\n  const [btnText, setBtnText] = useState('Enable Dark Mode');\r\n\r\n  const toggleStyle = () => {\r\n    if (myStyle.color === 'black') {\r\n      setMyStyle({\r\n        color: 'white',\r\n        backgroundColor: '#333',\r\n        border: '1px solid #555',\r\n      });\r\n      setBtnText('Enable Light Mode');\r\n    } else {\r\n      setMyStyle({\r\n        color: 'black',\r\n        backgroundColor: 'white',\r\n        border: '1px solid #ddd',\r\n      });\r\n      setBtnText('Enable Dark Mode');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container p-4\" style={myStyle}>\r\n      <h2 className=\"mb-4 text-center\" style={{ fontWeight: '600' }}>\r\n        About Us\r\n      </h2>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\" style={{ borderRadius: '5px', marginBottom: '1em', boxShadow: '0 4px 8px rgba(0,0,0,0.1)' }}>\r\n          <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> You can modify any of this with custom CSS or override the default styles. This accordion component is flexible and can hold any HTML elements.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={{ borderRadius: '5px', marginBottom: '1em', boxShadow: '0 4px 8px rgba(0,0,0,0.1)' }}>\r\n          <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> Modify any of this text with custom content, or use the default styles provided.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={{ borderRadius: '5px', marginBottom: '1em', boxShadow: '0 4px 8px rgba(0,0,0,0.1)' }}>\r\n          <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> This accordion component is easy to use and can be customized to fit your needs.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container text-center my-4\">\r\n        <button onClick={toggleStyle} type=\"button\" className=\"btn btn-primary px-4 py-2\" style={{ borderRadius: '5px' }}>\r\n          {btnText}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li>                 \r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleUpClick = () => {\r\n    const newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    const newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text Cleared!\", \"success\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    const newText = text.split(/[ ]+/).join(\" \");\r\n    setText(newText);\r\n    props.showAlert(\"Extra Spaces Removed!\", \"success\");\r\n  };\r\n\r\n  const handleReverseText = () => {\r\n    const newText = text.split(\"\").reverse().join(\"\");\r\n    setText(newText);\r\n    props.showAlert(\"Text Reversed!\", \"success\");\r\n  };\r\n\r\n  const handleCapitalizeWords = () => {\r\n    const newText = text\r\n      .toLowerCase()\r\n      .split(\" \")\r\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(\" \");\r\n    setText(newText);\r\n    props.showAlert(\"Words Capitalized!\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  // Count words accurately by filtering out empty strings\r\n  const wordCount = text.trim().split(/\\s+/).filter((element) => element.length !== 0).length;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === 'dark' ? '#333' : 'white',\r\n              color: props.mode === 'dark' ? 'white' : '#042743'\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            placeholder=\"Type your text here...\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick} disabled={text.length === 0}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLowClick} disabled={text.length === 0}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick} disabled={text.length === 0}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy} disabled={text.length === 0}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces} disabled={text.length === 0}>\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleReverseText} disabled={text.length === 0}>\r\n          Reverse Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCapitalizeWords} disabled={text.length === 0}>\r\n          Capitalize Words\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-4\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>{wordCount} words and {text.length} characters</p>\r\n        <p>{0.008 * wordCount} minutes required to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter some text above to preview it here.\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // Default to light mode\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    // Automatically dismiss the alert after 3 seconds\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode('dark');\n      document.body.style.backgroundColor = \"#042743\"; // a dark color\n      showAlert(\"Dark mode has been enabled.\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\"; // light mode color\n      showAlert(\"Light mode has been enabled.\", \"success\");\n    }\n  };\n\n  return (\n    <Router>\n      <Navbar title=\"TextWrap\" aboutText=\"About Text\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-4\">\n        <Routes>\n          <Route exact path=\"/\" element={<TextForm heading=\"Enter the text\" mode={mode} showAlert={showAlert} />} />\n          <Route exact path=\"/about\" element={<About />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}